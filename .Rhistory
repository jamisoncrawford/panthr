}
date_month(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = TRUE)
date_month(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = FALSE)
date_month_year <- function(date, sep = " ", abbreviate = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
f <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
a <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec.")
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
if (!is.na(d[i]) & abbreviate == FALSE){
v[i] <- paste(f[which(m == substr(d[i], 4, 6))],
paste0("20", substr(d[i], 8, 9)),
sep = sep)
}
if (!is.na(d[i]) & abbreviate == TRUE){
v[i] <- paste(a[which(m == substr(d[i], 4, 6))],
paste0("20", substr(d[i], 8, 9)),
sep = sep)
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
if (!is.na(d[i]) & abbreviate == FALSE){
v[i] <- paste(f[which(m == substr(d[i], 4, 6))],
paste0("20", substr(d[i], 8, 9)),
sep = sep)
}
if (!is.na(d[i]) & abbreviate == TRUE){
v[i] <- paste(a[which(m == substr(d[i], 4, 6))],
paste0("20", substr(d[i], 8, 9)),
sep = sep)
}
}
}
return(v)
}
date_month_year(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = FALSE)
date_month_year(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = TRUE)
date_month_year(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = TRUE, sep = ", ")
date_month_year(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = FALSE, sep = ", ")
date_month_year <- function(date, sep = " ", abbreviate = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
f <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
a <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec.")
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
if (!is.na(d[i]) & abbreviate == FALSE){
v[i] <- paste(f[which(m == substr(d[i], 4, 6))],
paste0("20", substr(d[i], 8, 9)),
sep = sep)
}
if (!is.na(d[i]) & abbreviate == TRUE){
v[i] <- paste(a[which(m == substr(d[i], 4, 6))],
paste0("20", substr(d[i], 8, 9)),
sep = sep)
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
if (!is.na(d[i]) & abbreviate == FALSE){
v[i] <- paste(f[which(m == substr(d[i], 4, 6))],
paste0("19", substr(d[i], 8, 9)),
sep = sep)
}
if (!is.na(d[i]) & abbreviate == TRUE){
v[i] <- paste(a[which(m == substr(d[i], 4, 6))],
paste0("19", substr(d[i], 8, 9)),
sep = sep)
}
}
}
return(v)
}
date_month_year(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"), abbreviate = FALSE, sep = ", ")
date_term <- function(date, round.up = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
v[i] <- paste0(month[i], year[i])
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
v[i] <- paste0(month[i], year[i])
}
}
return(v)
}
date_term(date = "25-MAY-19")
date_term <- function(date, round.up = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
month[i] <- as.numeric(month[i])
if (round.up == FALSE){
if (month[i] >= 1 & month[i] < 5){month[i] <- "01"}
if (month[i] >= 5 & month[i] < 8){month[i] <- "05"}
if (month[i] >= 8 & month[i] <= 12){month[i] <- "08"}
v[i] <- paste0(month[i], year[i])
}
if (round.up == TRUE){
if (month[i] >= 1 & month[i] < 5){month[i] <- "05"}
if (month[i] >= 5 & month[i] < 8){month[i] <- "08"}
if (month[i] >= 8 & month[i] <= 12){month[i] <- "01"}
v[i] <- paste0(month[i], year[i])
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("19", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
month[i] <- as.numeric(month[i])
if (round.up == FALSE){
if (month[i] >= 1 & month[i] < 5){month[i] <- "01"}
if (month[i] >= 5 & month[i] < 8){month[i] <- "05"}
if (month[i] >= 8 & month[i] <= 12){month[i] <- "08"}
v[i] <- paste0(month[i], year[i])
}
if (round.up == TRUE){
if (month[i] >= 1 & month[i] < 5){month[i] <- "05"}
if (month[i] >= 5 & month[i] < 8){month[i] <- "08"}
if (month[i] >= 8 & month[i] <= 12){month[i] <- "01"}
v[i] <- paste0(month[i], year[i])
}
}
}
return(v)
}
date_term(date = "25-MAY-19")
date_term(date = "25-JULY-19")
date_term(date = "25-JUL-19")
date_term(date = "25-AUG-19")
c(paste0("0", 1:9), 10:12)
date_term <- function(date, round.up = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
month[i] <- as.numeric(month[i])
if (round.up == FALSE){
if (month[i] >= 1 & month[i] < 5){as.character(month[i] <- "01")}
if (month[i] >= 5 & month[i] < 8){as.character(month[i] <- "05")}
if (month[i] >= 8 & month[i] <= 12){as.character(month[i] <- "08")}
v[i] <- paste0(month[i], year[i])
}
if (round.up == TRUE){
if (month[i] >= 1 & month[i] < 5){as.character(month[i] <- "05")}
if (month[i] >= 5 & month[i] < 8){as.character(month[i] <- "08")}
if (month[i] >= 8 & month[i] <= 12){as.character(month[i] <- "01")}
v[i] <- paste0(month[i], year[i])
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("19", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
month[i] <- as.numeric(month[i])
if (round.up == FALSE){
if (month[i] >= 1 & month[i] < 5){as.character(month[i] <- "01")}
if (month[i] >= 5 & month[i] < 8){as.character(month[i] <- "05")}
if (month[i] >= 8 & month[i] <= 12){as.character(month[i] <- "08")}
v[i] <- paste0(month[i], year[i])
}
if (round.up == TRUE){
if (month[i] >= 1 & month[i] < 5){as.character(month[i] <- "05")}
if (month[i] >= 5 & month[i] < 8){as.character(month[i] <- "08")}
if (month[i] >= 8 & month[i] <= 12){as.character(month[i] <- "01")}
v[i] <- paste0(month[i], year[i])
}
}
}
return(v)
}
date_term(date = "25-AUG-19")
date_iso <- function(date){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
day <- NA
year <- NA
month <- NA
day[i] <- substr(x = d[i], start = 1, stop = 2)
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- substr(x = d[i], start = 4, stop = 6)
for (j in 1:12){
month[i] <- gsub(x = month[i], m[j], n[j])
}
v[i] <- paste(year[i], month[i], day[i], sep = "-")
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
day <- NA
year <- NA
month <- NA
day[i] <- substr(x = d[i], start = 1, stop = 2)
year[i] <- paste0("19", substr(x = d[i], start = 8, stop = 9))
month[i] <- substr(x = d[i], start = 4, stop = 6)
for (j in 1:12){
month[i] <- gsub(x = month[i], m[j], n[j])
}
v[i] <- paste(year[i], month[i], day[i], sep = "-")
}
}
return(v)
}
date_term(date = "25-AUG-19")
date_term <- function(date, round.up = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
x <- month[i]
if (round.up == FALSE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "01"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "05"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "08"}
v[i] <- paste0(x, year[i])
}
if (round.up == TRUE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "05"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "08"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "01"}
v[i] <- paste0(x, year[i])
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("19", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
x <- month[i]
if (round.up == FALSE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "01"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "05"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "08"}
v[i] <- paste0(x, year[i])
}
if (round.up == TRUE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "05"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "08"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "01"}
v[i] <- paste0(x, year[i])
}
}
}
return(v)
}
date_term(date = "25-AUG-19")
date_term(c("12-DEC-19", "19-SEP-2013", NA, "23-FEB-91"))
date_term("25-MAY-08")
term_year_academic(date_term("25-MAY-08"))
term_year_academic(200805)
View(students)
date_term <- function(date, round.up = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
x <- month[i]
if (round.up == FALSE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "01"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "05"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "08"}
v[i] <- paste0(year[i], x)
}
if (round.up == TRUE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "05"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "08"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "01"}
v[i] <- paste0(year[i], x)
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("19", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
x <- month[i]
if (round.up == FALSE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "01"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "05"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "08"}
v[i] <- paste0(year[i], x)
}
if (round.up == TRUE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "05"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "08"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "01"}
v[i] <- paste0(year[i], x)
}
}
}
return(v)
}
date_term("25-MAY-08")
term_year_academic(date_term("25-MAY-08"))
term_dash(date_term("25-MAY-08"))
date_term("25-MAY-08")
date_term("25-MAY-08", round.up = TRUE)
date_term("25-MAY-04")
date_term(date = "25-MAY-04")
date_term(date = "25-MAY-04", round.up = TRUE)
date_term(date = "25-AUG-04", round.up = TRUE)
date_term <- function(date, round.up = FALSE){
m <- c("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC")
n <- c(paste0("0", 1:9), 10:12)
d <- date
v <- NA
for (i in seq_along(d)){
if (is.na(d[i])) {
v[i] <- NA
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "[0-9]{2}-[A-Z]{3}-[0-9]{2}")) {
v[i] <- NA
warning("One or more values passed to 'date =' are not in 'DD-MMM-YY' format; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & !grepl(x = d[i], pattern = "JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC")) {
v[i] <- NA
warning("One or more values passed to 'date =' contain unrecognized month abbreviations; coercing to NA", call. = F)
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) <= 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("20", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
x <- month[i]
if (round.up == FALSE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "01"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "05"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "08"}
v[i] <- paste0(year[i], x)
}
if (round.up == TRUE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "05"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "08"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){
x <- "01"
year[i] <- as.character(as.numeric(year[i]) + 1)
}
v[i] <- paste0(year[i], x)
}
}
else if (!is.na(d[i]) & as.numeric(substr(x = d[i], start = 8, stop = 9)) > 30){
term <- NA
year <- NA
month <- NA
year[i] <- paste0("19", substr(x = d[i], start = 8, stop = 9))
month[i] <- n[which(m == substr(x = d[i], start = 4, stop = 6))]
x <- month[i]
if (round.up == FALSE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "01"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "05"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){x <- "08"}
v[i] <- paste0(year[i], x)
}
if (round.up == TRUE){
if (as.numeric(x) >= 1 & as.numeric(x) < 5){x <- "05"}
if (as.numeric(x) >= 5 & as.numeric(x) < 8){x <- "08"}
if (as.numeric(x) >= 8 & as.numeric(x) <= 12){
x <- "01"
year[i] <- as.character(as.numeric(year[i]) + 1)
}
v[i] <- paste0(year[i], x)
}
}
}
return(v)
}
date_term(date = "25-AUG-04", round.up = TRUE)
date_term(date = "25-SEP-04", round.up = TRUE)
date_term(date = "25-SEP-04", round.up = FALSE)
date_term(date = "25-JUL-04", round.up = FALSE)
library(panthr)
library(panthr)
?date_month_year
